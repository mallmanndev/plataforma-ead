// Code generated by MockGen. DO NOT EDIT.
// Source: people_repository.go

// Package mock_ports is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/matheusvmallmann/plataforma-ead/service-course/domain/entities"
)

// MockPeopleRepository is a mock of PeopleRepository interface.
type MockPeopleRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPeopleRepositoryMockRecorder
}

// MockPeopleRepositoryMockRecorder is the mock recorder for MockPeopleRepository.
type MockPeopleRepositoryMockRecorder struct {
	mock *MockPeopleRepository
}

// NewMockPeopleRepository creates a new mock instance.
func NewMockPeopleRepository(ctrl *gomock.Controller) *MockPeopleRepository {
	mock := &MockPeopleRepository{ctrl: ctrl}
	mock.recorder = &MockPeopleRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPeopleRepository) EXPECT() *MockPeopleRepositoryMockRecorder {
	return m.recorder
}

// FindById mocks base method.
func (m *MockPeopleRepository) FindById(Id string) (*entities.People, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindById", Id)
	ret0, _ := ret[0].(*entities.People)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindById indicates an expected call of FindById.
func (mr *MockPeopleRepositoryMockRecorder) FindById(Id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindById", reflect.TypeOf((*MockPeopleRepository)(nil).FindById), Id)
}

// Upsert mocks base method.
func (m *MockPeopleRepository) Upsert(People *entities.People) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Upsert", People)
	ret0, _ := ret[0].(error)
	return ret0
}

// Upsert indicates an expected call of Upsert.
func (mr *MockPeopleRepositoryMockRecorder) Upsert(People interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Upsert", reflect.TypeOf((*MockPeopleRepository)(nil).Upsert), People)
}
