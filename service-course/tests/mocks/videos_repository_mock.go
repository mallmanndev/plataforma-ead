// Code generated by MockGen. DO NOT EDIT.
// Source: ./videos_repository.go

// Package mock_ports is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/matheusvmallmann/plataforma-ead/service-course/domain/entities"
)

// MockVideosRepository is a mock of VideosRepository interface.
type MockVideosRepository struct {
	ctrl     *gomock.Controller
	recorder *MockVideosRepositoryMockRecorder
}

// MockVideosRepositoryMockRecorder is the mock recorder for MockVideosRepository.
type MockVideosRepositoryMockRecorder struct {
	mock *MockVideosRepository
}

// NewMockVideosRepository creates a new mock instance.
func NewMockVideosRepository(ctrl *gomock.Controller) *MockVideosRepository {
	mock := &MockVideosRepository{ctrl: ctrl}
	mock.recorder = &MockVideosRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVideosRepository) EXPECT() *MockVideosRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockVideosRepository) Create(video *entities.Video) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", video)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockVideosRepositoryMockRecorder) Create(video interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockVideosRepository)(nil).Create), video)
}
